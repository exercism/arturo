#!/usr/bin/env bash

# Synopsis:
# Test the track's exercises.

# Example: verify all exercises
# ./bin/verify-exercises-in-docker

# Example: verify single exercise
# ./bin/verify-exercises-in-docker two-fer

set -eo pipefail

required_tool() {
    command -v "${1}" >/dev/null 2>&1 ||
        die "${1} is required but not installed. Please install it and make sure it's in your PATH."
}

required_tool docker

copy_example_or_examplar_to_solution() {
    jq -c '[.files.solution, .files.exemplar // .files.example] | transpose | map({src: .[1], dst: .[0]}) | .[]' .meta/config.json | while read -r src_and_dst; do
        cp "$(echo "${src_and_dst}" | jq -r '.src')" "$(echo "${src_and_dst}" | jq -r '.dst')"
    done
}

run_tests() {
    local slug
    slug="${1}"

    docker run \
        --rm \
        --network none \
        --read-only \
        --mount type=bind,src="${PWD}",dst=/solution \
        --mount type=bind,src="${PWD}",dst=/output \
        --mount type=tmpfs,dst=/tmp \
        exercism/arturo-test-runner "${slug}" /solution /output
    jq -e '.status == "pass"' "${PWD}/results.json" >/dev/null 2>&1
}

verify_exercise() {
    local dir
    local slug
    local tmp_dir

    dir=$(realpath "${1}")
    slug=$(basename "${dir}")
    tmp_dir=$(mktemp -d -t "exercism-verify-${slug}-XXXXX")

    echo "Verifying ${slug} exercise..."

    (
        cp -r "${dir}/." "${tmp_dir}"
        cd "${tmp_dir}"

        copy_example_or_examplar_to_solution
        run_tests "${slug}"
    )
}

exercise_slug="${1:-*}"

docker pull exercism/arturo-test-runner

shopt -s nullglob
for exercise_dir in ./exercises/{concept,practice}/${exercise_slug}/; do
    if [ -d "${exercise_dir}" ]; then
        verify_exercise "${exercise_dir}"
    fi
done
