import.version:2.0.1 {unitt}!
import {src/bob}!

describe "Bob" [
    it "stating something" [
        heyBob: "Tom-ay-to, tom-aaaah-to."
        expects.be:'equal? @["Whatever." response heyBob]
    ]

    it.skip "shouting" [
        heyBob: "WATCH OUT!"
        expects.be:'equal? @["Whoa, chill out!" response heyBob]
    ]

    it.skip "shouting gibberish" [
        heyBob: "FCECDFCAAB"
        expects.be:'equal? @["Whoa, chill out!" response heyBob]
    ]

    it.skip "asking a question" [
        heyBob: "Does this cryogenic chamber make me look fat?"
        expects.be:'equal? @["Sure." response heyBob]
    ]

    it.skip "asking a numeric question" [
        heyBob: "You are, what, like 15?"
        expects.be:'equal? @["Sure." response heyBob]
    ]

    it.skip "asking gibberish" [
        heyBob: "fffbbcbeab?"
        expects.be:'equal? @["Sure." response heyBob]
    ]

    it.skip "talking forcefully" [
        heyBob: "Let's go make out behind the gym!"
        expects.be:'equal? @["Whatever." response heyBob]
    ]

    it.skip "using acronyms in regular speech" [
        heyBob: "It's OK if you don't want to go to the DMV."
        expects.be:'equal? @["Whatever." response heyBob]
    ]

    it.skip "forceful question" [
        heyBob: "WHAT THE HELL WERE YOU THINKING?"
        expects.be:'equal? @["Calm down, I know what I'm doing!" response heyBob]
    ]

    it.skip "shouting numbers" [
        heyBob: "1, 2, 3 GO!"
        expects.be:'equal? @["Whoa, chill out!" response heyBob]
    ]

    it.skip "no letters" [
        heyBob: "1, 2, 3"
        expects.be:'equal? @["Whatever." response heyBob]
    ]

    it.skip "question with no letters" [
        heyBob: "4?"
        expects.be:'equal? @["Sure." response heyBob]
    ]

    it.skip "shouting with special characters" [
        heyBob: "ZOMG THE %^*@#$(*^ ZOMBIES ARE COMING!!11!!1!"
        expects.be:'equal? @["Whoa, chill out!" response heyBob]
    ]

    it.skip "shouting with no exclamation mark" [
        heyBob: "I HATE YOU"
        expects.be:'equal? @["Whoa, chill out!" response heyBob]
    ]

    it.skip "statement containing question mark" [
        heyBob: "Ending with ? means a question."
        expects.be:'equal? @["Whatever." response heyBob]
    ]

    it.skip "non-letters with question" [
        heyBob: ":) ?"
        expects.be:'equal? @["Sure." response heyBob]
    ]

    it.skip "prattling on" [
        heyBob: "Wait! Hang on. Are you going to be OK?"
        expects.be:'equal? @["Sure." response heyBob]
    ]

    it.skip "silence" [
        heyBob: ""
        expects.be:'equal? @["Fine. Be that way!" response heyBob]
    ]

    it.skip "prolonged silence" [
        heyBob: "    "
        expects.be:'equal? @["Fine. Be that way!" response heyBob]
    ]

    it.skip "alternate silence" [
        heyBob: "\t\t\t\t\t\t\t\t\t\t"
        expects.be:'equal? @["Fine. Be that way!" response heyBob]
    ]

    it.skip "starting with whitespace" [
        heyBob: "         hmmmmmmm..."
        expects.be:'equal? @["Whatever." response heyBob]
    ]

    it.skip "ending with whitespace" [
        heyBob: "Okay if like my  spacebar  quite a bit?   "
        expects.be:'equal? @["Sure." response heyBob]
    ]

    it.skip "other whitespace" [
        heyBob: "\n\r \t"
        expects.be:'equal? @["Fine. Be that way!" response heyBob]
    ]

    it.skip "non-question ending with whitespace" [
        heyBob: "This is a statement ending with whitespace      "
        expects.be:'equal? @["Whatever." response heyBob]
    ]

    it.skip "multiple line question" [
        heyBob: "\nDoes this cryogenic chamber make\n me look fat?"
        expects.be:'equal? @["Sure." response heyBob]
    ]
]
