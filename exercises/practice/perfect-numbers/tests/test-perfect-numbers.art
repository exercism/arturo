import.version:2.0.1 {unitt}!
import {src/perfect-numbers}!

describe "Perfect Numbers" [
    it "Smallest perfect number is classified correctly" [
        expects.be:'equal? @['perfect classify 6]
    ]

    it.skip "Medium perfect number is classified correctly" [
        expects.be:'equal? @['perfect classify 28]
    ]

    it.skip "Large perfect number is classified correctly" [
        expects.be:'equal? @['perfect classify 33550336]
    ]

    it.skip "Smallest abundant number is classified correctly" [
        expects.be:'equal? @['abundant classify 12]
    ]

    it.skip "Medium abundant number is classified correctly" [
        expects.be:'equal? @['abundant classify 30]
    ]

    it.skip "Large abundant number is classified correctly" [
        expects.be:'equal? @['abundant classify 33550335]
    ]

    it.skip "Smallest prime deficient number is classified correctly" [
        expects.be:'equal? @['deficient classify 2]
    ]

    it.skip "Smallest non-prime deficient number is classified correctly" [
        expects.be:'equal? @['deficient classify 4]
    ]

    it.skip "Medium deficient number is classified correctly" [
        expects.be:'equal? @['deficient classify 32]
    ]

    it.skip "Large deficient number is classified correctly" [
        expects.be:'equal? @['deficient classify 33550337]
    ]

    it.skip "Edge case (no factors other than itself) is classified correctly" [
        expects.be:'equal? @['deficient classify 1]
    ]

    it.skip "Zero is rejected (as it is not a positive integer)" [
        expects.be:'null? @[classify 0]
    ]

    it.skip "Negative integer is rejected (as it is not a positive integer)" [
        expects.be:'null? @[classify neg 1]
    ]
]
